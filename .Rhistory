require("RMySQL")
require("ggplot2")
con <- dbConnect(RMySQL::MySQL(), group = "test")
walk_user <- "UEB41HNQ17"
sit_user <- "0LQO4O9VAL"
sleep_user <- "0LQO4O9VAL"
sit_time_start <- "2015-06-17 22:50:00"
sit_time_end <- "2015-06-17 23:50:00"
sleep_time_start <- "2015-06-17 22:35:00"
sleep_time_end <- "2015-06-17 22:50:00"
walk_time_start <- "2015-06-18 11:10:00"
walk_time_end <- "2015-06-18 11:35:00"
data <- dbReadTable(con, "DataCollection_sensor")
sit_data = data[which(data$time>sit_time_start & data$time<sit_time_end & data$sensor == '1' & data$username == sit_user),]
sleep_data = data[which(data$time>sleep_time_start & data$time<sleep_time_end & data$sensor == '1' & data$username == sleep_user),]
walk_data = data[which(data$time>walk_time_start & data$time<walk_time_end & data$sensor == '1' & data$username == walk_user),]
ggplot(sit_data, aes(id)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
ggplot(sleep_data, aes(id)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
ggplot(walk_data, aes(id)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
require("RMySQL")
require("ggplot2")
con <- dbConnect(RMySQL::MySQL(), group = "test")
walk_user <- "UEB41HNQ17"
sit_user <- "UEB41HNQ17"
sleep_user <- "0LQO4O9VAL"
sit_time_start <- "2015-06-18 11:53:00"
sit_time_end <- "2015-06-18 12:00:00"
sleep_time_start <- "2015-06-17 22:35:00"
sleep_time_end <- "2015-06-17 22:50:00"
walk_time_start <- "2015-06-18 11:10:00"
walk_time_end <- "2015-06-18 11:35:00"
data <- dbReadTable(con, "DataCollection_sensor")
sit_data = data[which(data$time>sit_time_start & data$time<sit_time_end & data$sensor == '1' & data$username == sit_user),]
sleep_data = data[which(data$time>sleep_time_start & data$time<sleep_time_end & data$sensor == '1' & data$username == sleep_user),]
walk_data = data[which(data$time>walk_time_start & data$time<walk_time_end & data$sensor == '1' & data$username == walk_user),]
ggplot(sit_data, aes(id)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
ggplot(sleep_data, aes(id)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
ggplot(walk_data, aes(id)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
ggplot(walk_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
ggplot(walk_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
ggplot(walk_data, aes(timestamp)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
ggplot(sit_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
mode(data$time)
data$time <- strptime(data$time, "%Y-%m-%d %H:%M:%S" )
mode(data$time)
data$time <- strptime(data$time, "%Y-%m-%d %H:%M:%S")
sit_data = data[which(data$time>sit_time_start & data$time<sit_time_end & data$sensor == '1' & data$username == sit_user),]
sleep_data = data[which(data$time>sleep_time_start & data$time<sleep_time_end & data$sensor == '1' & data$username == sleep_user),]
walk_data = data[which(data$time>walk_time_start & data$time<walk_time_end & data$sensor == '1' & data$username == walk_user),]
ggplot(sit_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
moggplot(sleep_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
ggplot(walk_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
ggplot(walk_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
ggplot(sit_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
ggplot(sleep_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
ggplot(walk_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
users = dbReadTable(con, "DataCollection_story")
con <- dbConnect(RMySQL::MySQL(), group = "test")
users = dbReadTable(con, "DataCollection_story")
View(users)
View(users)
usernames = unique(users$username)
unique(users$username)
View(users)
View(users)
View(users)
require("RMySQL")
require("ggplot2")
con <- dbConnect(RMySQL::MySQL(), group = "test")
walk_user <- "YJLDC76AR6"
sit_user <- "UEB41HNQ17"
sleep_user <- "0LQO4O9VAL"
deepali <- "YJLDC76AR6"
sit_time_start <- "2015-06-18 11:53:00"
sit_time_end <- "2015-06-18 12:00:00"
sleep_time_start <- "2015-06-17 22:35:00"
sleep_time_end <- "2015-06-17 22:50:00"
walk_time_start <- "2015-06-18 13:40:00"
walk_time_end <- "2015-06-18 14:05:00"
data <- dbReadTable(con, "DataCollection_sensor")
data$time <- strptime(data$time, "%Y-%m-%d %H:%M:%S")
sit_data = data[which(data$time>sit_time_start & data$time<sit_time_end & data$sensor == '1' & data$username == sit_user),]
sleep_data = data[which(data$time>sleep_time_start & data$time<sleep_time_end & data$sensor == '1' & data$username == sleep_user),]
walk_data = data[which(data$time>walk_time_start & data$time<walk_time_end & data$sensor == '1' & data$username == walk_user),]
ggplot(sit_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
ggplot(sleep_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
ggplot(walk_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
walk_user <- "EFE3ZQZGTS"
ggplot(walk_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
walk_data = data[which(data$time>walk_time_start & data$time<walk_time_end & data$sensor == '1' & data$username == walk_user),]
ggplot(walk_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
walk_user <- "F5DMLISEB7"
walk_data = data[which(data$time>walk_time_start & data$time<walk_time_end & data$sensor == '1' & data$username == walk_user),]
ggplot(walk_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
walk_user <- "NC7HX83P5F"
walk_data = data[which(data$time>walk_time_start & data$time<walk_time_end & data$sensor == '1' & data$username == walk_user),]
ggplot(walk_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
sit_user <- "YJLDC76AR6"
sit_data = data[which(data$time>sit_time_start & data$time<sit_time_end & data$sensor == '1' & data$username == sit_user),]
ggplot(sit_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
ggplot(sit_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
sit_data = data[which(data$time>sit_time_start & data$time<sit_time_end & data$sensor == '1' & data$username == sit_user),]
View(sit_data)
sit_data = data[which(data$time>sit_time_start & data$time<sit_time_end & data$sensor == '1' & data$username == sit_user),]
View(walk_data)
sit_data = data[which(data$time>sit_time_start & data$time<sit_time_end & data$sensor == '1' & data$username == sit_user),]
sleep_data = data[which(data$time>sleep_time_start & data$time<sleep_time_end & data$sensor == '1' & data$username == sleep_user),]
walk_data = data[which(data$time>walk_time_start & data$time<walk_time_end & data$sensor == '1' & data$username == walk_user),]
ggplot(sit_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
ggplot(sleep_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
ggplot(walk_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
sit_data = data[which(data$sensor == '1' & data$username == sit_user),]
ggplot(sit_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
data <- dbReadTable(con, "DataCollection_sensor")
sit_data = data[which(data$sensor == '1' & data$username == sit_user),]
ggplot(sit_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
data$time <- strptime(data$time, "%Y-%m-%d %H:%M:%S")
sit_data = data[which(data$sensor == '1' & data$username == sit_user),]
ggplot(sit_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
data <- dbReadTable(con, "DataCollection_sensor")
data$time <- strptime(data$time, "%Y-%m-%d %H:%M:%S")
sit_data = data[which(data$sensor == '1' & data$username == sit_user),]
ggplot(sit_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
data <- dbReadTable(con, "DataCollection_sensor")
data$time <- strptime(data$time, "%Y-%m-%d %H:%M:%S")
sit_data = data[which(data$sensor == '1' & data$username == sit_user),]
ggplot(walk_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
ggplot(sit_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
data <- dbReadTable(con, "DataCollection_sensor")
data$time <- strptime(data$time, "%Y-%m-%d %H:%M:%S")
sit_data = data[which(data$sensor == '1' & data$username == sit_user),]
ggplot(sit_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
data <- dbReadTable(con, "DataCollection_sensor")
data$time <- strptime(data$time, "%Y-%m-%d %H:%M:%S")
sit_data = data[which(data$sensor == '1' & data$username == sit_user),]
ggplot(sit_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
data <- dbReadTable(con, "DataCollection_sensor")
data$time <- strptime(data$time, "%Y-%m-%d %H:%M:%S")
sit_data = data[which(data$sensor == '1' & data$username == sit_user),]
ggplot(sit_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
data <- dbReadTable(con, "DataCollection_sensor")
data$time <- strptime(data$time, "%Y-%m-%d %H:%M:%S")
sit_data = data[which(data$sensor == '1' & data$username == sit_user),]
ggplot(sit_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
data <- dbReadTable(con, "DataCollection_sensor")
data$time <- strptime(data$time, "%Y-%m-%d %H:%M:%S")
sit_data = data[which(data$sensor == '1' & data$username == sit_user),]
ggplot(sit_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
require(devtools)
install.packages("devtools")
data <- dbReadTable(con, "DataCollection_sensor")
data$time <- strptime(data$time, "%Y-%m-%d %H:%M:%S")
sit_data = data[which(data$sensor == '1' & data$username == sit_user),]
ggplot(sit_data, aes(time)) + geom_line(aes(y=value1), colour="red") + geom_line(aes(y=value2), colour="green") + geom_line(aes(y=value3), colour="blue")
require(devtools)
require('devtools')
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
require('devtools')
install_github('rCharts', 'ramnathv')
library("rcharts")
library("rCharts")
m1 <- mPlot(x = "time", y = c("value1", "value2", "value3"), type = "Line", data = data)
m1$set(pointSize = 0, lineWidth = 1)
m1$print("chart2")
library("rCharts")
m1 <- mPlot(x = "time", y = c("value1", "value2", "value3"), type = "Line", data = data)
m1 <- mPlot(x = "time", y = c("value1", "value2", "value3"), type = "Line", data = sit_data)
m1$set(pointSize = 0, lineWidth = 1)
m1$print("chart2")
js = m1$print("chart2")
data(sit_data, package = "ggplot2")
View(sit_data)
data(sit_data, package = "ggplot2")
sit_data = data[which(data$sensor == '1' & data$username == sit_user),]
data <- dbReadTable(con, "DataCollection_sensor")
# data$time <- strptime(data$time, "%Y-%m-%d %H:%M:%S")
sit_data = data[which(data$sensor == '1' & data$username == sit_user),]
m1 <- mPlot(x = "time", y = c("value1", "value2", "value3"), type = "Line", data = sit_data)
m1$set(pointSize = 0, lineWidth = 1)
mi$print("chart")
m1$print("chart")
m1$show("chart")
m1$show("Server")
m1$show("server")
m1
names(iris) = gsub("\\.", "", names(iris))
rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
hair_eye = as.data.frame(HairEyeColor)
rPlot(Freq ~ Hair | Eye, color = 'Eye', data = hair_eye, type = 'bar')
r1 <- rPlot(mpg ~ wt | am + vs, data = mtcars, type = 'point', color = 'gear')
r1
data(economics, package = 'ggplot2')
econ <- transform(economics, date = as.character(date))
m1 <- mPlot(x = 'date', y = c('psavert', 'uempmed'), type = 'Line',
data = econ)
m1$set(pointSize = 0, lineWidth = 1)
m1
data = econ)
m1 <- mPlot(x = 'time', y = c('value1', 'value2', 'value3'), type = 'Line',
data = sit_data)
m1$set(pointSize = 0, lineWidth = 1)
m1
iris
head(iris)
str(iris)
str(sit_data)
str(econ)
sit <- transform(sit_data, time = as.character(time))
str(sit_data)
data <- dbReadTable(con, "DataCollection_sensor")
con <- dbConnect(RMySQL::MySQL(), group = "test")
data <- dbReadTable(con, "DataCollection_sensor")
sit_data = data[which(data$sensor == '1' & data$username == sit_user),]
str(sit_data)
str(econ)
m1 <- mPlot(x = 'time', y = c('value1', 'value2', 'value3'), type = 'Line',
data = sit_data)
m1$set(pointSize = 0, lineWidth = 1)
m1
m1$show('server')
require('forecast')
install.packages("forecast")
data <- dbReadTable(con, "DataCollection_sensor")
data$time <- strptime(data$time, "%Y-%m-%d %H:%M:%S")
sit_data = data[which(data$sensor == '1' & data$username == sit_user),]
require('forecast')
ts(sit_data$value1)
y = ts(sit_data$value1)
ets(y)
plot(ets(y))
data <- dbReadTable(con, "DataCollection_sensor")
sit_data = data[which(data$sensor == '1' & data$username == sit_user),]
m1 <- mPlot(x = 'time', y = c('value1', 'value2', 'value3'), type = 'Line', data = sit_data)
m1$set(pointSize = 0, linewidth = 1)
m1
m1$set(pointSize = 0, linewidth = 1)
m1
fresh_data = sit_data[which(sit_data$time>"2015-06-18 13:34:26" & sit_data$time < "2015-06-18 14:12:28" ),]
m1 <- mPlot(x= 'time', y = c('value1', 'value2', 'value3'), type = 'Line', data = fresh_data)
m1$set(pointSize=0, linewidth=1)
m1
fresh_data = sit_data[which(sit_data$time>"2015-06-18 13:37:10" & sit_data$time < "2015-06-18 14:05:48" ),]
m1 <- mPlot(x= 'time', y = c('value1', 'value2', 'value3'), type = 'Line', data = fresh_data)
m1$set(pointSize=0, linewidth=1)
m1
var(fresh_data$value1)
str(fresh_data)
View(fresh_data)
fresh_data$time <- strptime(fresh_data$time, "%Y-%m-%d %H:%M:%S")
data.frame(table(cut(fresh_data, breaks = "5 mins")))
data.frame(table(cut(fresh_data$time, breaks = "5 mins")))
cut(fresh_data$time, breaks = "5 mins")
x<-data.frame(cut(fresh_data$time, breaks = "5 mins"))
x
View(x)
View(fresh_data)
mean(fresh_data$value1)
groups = cut(fresh_data$time, breaks = "5 min")
library('plyr')
ddply(fresh_data, "groups", tail, 1)[, -1]
groups = cut(as.POSIXct(fresh_data$time), breaks = "5 min")
library('plyr')
ddply(fresh_data, "groups", tail, 1)[, -1]
groups = cut(as.POSIXct(fresh_data$time, tz=""), breaks = "5 min")
library('plyr')
ddply(fresh_data, "groups", tail, 1)[, -1]
ddply(fresh_data, "groups", tail, 1, tz="")[, -1]
ddply(fresh_data, "groups", tail, 1)[, -1]
split(fresh_data, groups)
new = split(fresh_data, groups)
View(new)
new$`2015-06-18 13:42:00`
View(new$`2015-06-18 13:42:00`)
View(new$`2015-06-18 13:47:00`)
new[[1]]
View(new[[1]])
View(new[[2]])
var(new)
var(new[[1]])
var(new$value1)
var(new[[1]]$value1)
for (i in nrow(new)){
v1=var(new[[i]]$value1)
v2=var(new[[i]]$value2)
v3=var(new[[i]]$value3)
rbind(variance,c(v1, v2, v3))
}
View(variance)
variance = NULL
for (i in nrow(new)){
v1=var(new[[i]]$value1)
v2=var(new[[i]]$value2)
v3=var(new[[i]]$value3)
rbind(variance,c(v1, v2, v3))
}
?"matrix"
matrix(variance, nrow = 1, ncol = 3)
variance <- matrix(, nrow = 1, ncol = 3)
for (i in nrow(new)){
variance <- matrix(, nrow = 1, ncol = 3)
variance <- matrix(, nrow = 1, ncol = 3)
variance <- matrix(, nrow = 1, ncol = 3)
variance <- matrix(, nrow = 1, ncol = 3)
variance <- matrix(, nrow = 1, ncol = 3)
variance <- matrix(, nrow = 1, ncol = 3)
variance <- matrix(, nrow = 1, ncol = 3)
variance <- matrix(, nrow = 1, ncol = 3)
variance <- matrix(, nrow = 1, ncol = 3)
variance <- matrix(, nrow = 1, ncol = 3)
variance <- matrix(, nrow = 1, ncol = 3)
variance <- matrix(, nrow = 1, ncol = 3)
variance <- matrix(, nrow = 1, ncol = 3)
for (i in nrow(new)){
v1=var(new[[i]]$value1)
v2=var(new[[i]]$value2)
v3=var(new[[i]]$value3)
rbind(variance,c(v1, v2, v3))
}
View(users)
View(variance)
View(variance)
View(variance)
;
View(variance)
for (i in nrow(new)){
v1=var(new[[i]]$value1)
v2=var(new[[i]]$value2)
v3=var(new[[i]]$value3)
rbind(variance,c(v1, v2, v3))
}
variance <- matrix(, nrow = nrow(new), ncol = 3)
variance <- matrix(, nrow = nrow(new), ncol = 3)
View(walk_data)
variance <- matrix(, nrow = 0, ncol = 3)
for (i in nrow(new)){
v1=var(new[[i]]$value1)
v2=var(new[[i]]$value2)
v3=var(new[[i]]$value3)
variance[i,]=c(v1, v2, v3)
}
View(variance)
variance <- matrix(, nrow = 100, ncol = 3)
for (i in nrow(new)){
v1=var(new[[i]]$value1)
v2=var(new[[i]]$value2)
v3=var(new[[i]]$value3)
variance[i,]<-c(v1, v2, v3)
}
View(variance)
for (i in nrow(new)){
v1=var(new[[i]]$value1)
v2=var(new[[i]]$value2)
v3=var(new[[i]]$value3)
variance[i,]<-c(v1, v2, v3)
print (c(v1,v2,v3))
}
print nrow(new)
print (nrow(new))
new
nrow(new[[1]])
nrow(new[1])
nrow(new[])
mode(new)
str(new)
for (i in 1:6){
v1=var(new[[i]]$value1)
v2=var(new[[i]]$value2)
v3=var(new[[i]]$value3)
variance[i,]<-c(v1, v2, v3)
}
View(variance)
View(variance)
rm(variance)
for (i in 1:6){
v1=var(new[[i]]$value1)
v2=var(new[[i]]$value2)
v3=var(new[[i]]$value3)
#variance[i,]<-c(v1, v2, v3)
rbind(variance,c(v1,v2,v3))
}
variance = NULL
print (nrow(new))
for (i in 1:6){
v1=var(new[[i]]$value1)
v2=var(new[[i]]$value2)
v3=var(new[[i]]$value3)
#variance[i,]<-c(v1, v2, v3)
rbind(variance,c(v1,v2,v3))
}
View(variance)
variance <- matrix(nrow = 6, ncol = 3)
print (nrow(new))
for (i in 1:6){
v1=var(new[[i]]$value1)
v2=var(new[[i]]$value2)
v3=var(new[[i]]$value3)
variance[i,]<-c(v1, v2, v3)
}
getWd()
getwd()
getwd()
load("/home/djain/.RData")
getwd()
setwd
setwd("/home/djain/Projects/Incubator/Physical Activity Recognition/Human_activity_recognition")
getwd()
source("fetch_training_data.R")
source("helper.R")
train_data <- fetch_train_data()
visualize(train_data$sit, 'V1', c('V2', 'V3', 'V4'))
visualize(train_data$walk, 'V1', c('V2', 'V3', 'V4'))
